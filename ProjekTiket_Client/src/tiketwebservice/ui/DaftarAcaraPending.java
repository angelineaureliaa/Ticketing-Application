/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package tiketwebservice.ui;

import java.awt.Color;
import java.awt.Dimension;
import java.awt.Font;
import java.awt.Toolkit;
import java.io.BufferedReader;
import java.io.DataOutputStream;
import java.io.IOException;
import java.io.InputStreamReader;
import java.net.Socket;
import java.sql.Date;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumnModel;

/**
 *
 * @author user
 */
public class DaftarAcaraPending extends javax.swing.JFrame implements Runnable {

    public String usn;
    public String nama_acara =  "";
    public String kategori = "";
    public String lokasi = "";
    public Date tanggal_acara = null;
    public String id_racr = "";
    public String id_acara = "";

    Socket s;
    Thread t;
    BufferedReader in;
    DataOutputStream out;

    /**
     * Creates new form RiwayatPesan
     */
    public DaftarAcaraPending() {
        try {
            initComponents();

            //TCP
            s = new Socket("localhost", 6002);
            if (t == null) {
                t = new Thread(this, "Client");
                t.start();
            }
        } catch (IOException ex) {
            System.out.println("Error di constructor = " + ex);
        }
    }

    public void tampil() {
        tampilDaftarAcara();
    }

    public void tampilDaftarAcara() {
        try {
            String chatClient;
            usn = txtNama.getText();
            chatClient = "Daftar Acara Pending-n" + usn;
            DataOutputStream out = new DataOutputStream(s.getOutputStream());
            out.writeBytes(chatClient + "\n");
        } catch (Exception e) {
            System.out.println(e);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanelMain = new javax.swing.JPanel();
        txtNama = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableAcara = new javax.swing.JTable();
        jButtonPesan = new javax.swing.JButton();
        buttonBack = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanelMain.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        txtNama.setFont(new java.awt.Font("Verdana", 1, 34)); // NOI18N
        txtNama.setText("nama");
        jPanelMain.add(txtNama, new org.netbeans.lib.awtextra.AbsoluteConstraints(860, 10, -1, -1));

        tableAcara.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID Reservasi", "ID Acara", "Nama Acara", "Kategori", "Lokasi", "Tanggal"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tableAcara.setSelectionBackground(new java.awt.Color(107, 114, 61));
        tableAcara.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableAcaraMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tableAcara);

        jPanelMain.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 150, 640, 330));

        jButtonPesan.setFont(new java.awt.Font("Verdana", 0, 20)); // NOI18N
        jButtonPesan.setText("Claim Ticket");
        jButtonPesan.setToolTipText("");
        jButtonPesan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonPesanActionPerformed(evt);
            }
        });
        jPanelMain.add(jButtonPesan, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 500, -1, 40));

        buttonBack.setFont(new java.awt.Font("Verdana", 0, 18)); // NOI18N
        buttonBack.setText("<");
        buttonBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonBackActionPerformed(evt);
            }
        });
        jPanelMain.add(buttonBack, new org.netbeans.lib.awtextra.AbsoluteConstraints(15, 20, -1, -1));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/background/images/bgDaftarTiketAcara.png"))); // NOI18N
        jPanelMain.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1050, 580));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanelMain, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanelMain, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tableAcaraMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableAcaraMouseClicked
        // TODO add your handling code here:
        JTable val = (JTable) evt.getSource();
        int row = val.getSelectedRow();
        if (row != -1) {
            id_racr = val.getValueAt(row, 0).toString();
            id_acara = val.getValueAt(row, 1).toString();
            nama_acara = val.getValueAt(row, 2).toString();
            kategori = val.getValueAt(row, 3).toString();
            lokasi = val.getValueAt(row, 4).toString();
            tanggal_acara = Date.valueOf(val.getValueAt(row, 5).toString());
        } else {
            id_racr = "";
            id_acara = "";
            nama_acara = "";
            kategori = "";
            lokasi = "";
            tanggal_acara = null;
        }
    }//GEN-LAST:event_tableAcaraMouseClicked

    private void jButtonPesanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonPesanActionPerformed
        // TODO add your handling code here:
        if (!nama_acara.isEmpty() && !kategori.isEmpty() && !lokasi.isEmpty() && tanggal_acara != null && !id_racr.isEmpty() && !id_acara.isEmpty()) {
            DateTimeFormatter formatter = DateTimeFormatter.ofPattern("yyyy-MM-dd");
            LocalDate tanggalHariIni = LocalDate.now();
            LocalDate eventDate = LocalDate.parse(tanggal_acara.toString(), formatter);

            if (eventDate.equals(tanggalHariIni)) {
                System.out.println("Nama: " + nama_acara);
                ClaimTicketAcara form = new ClaimTicketAcara();
                form.nama_acara = nama_acara;
                form.kategori = kategori;
                form.lokasi = lokasi;
                form.tanggal_acara = tanggal_acara;
                form.usn = usn;
                form.idRacr = id_racr;
                form.idAcara = id_acara;
                form.tampil();
                form.setVisible(true);
                this.setVisible(false);
            } else {
                JOptionPane.showMessageDialog(this, "Maaf, tiket hanya bisa diklaim saat Hari-H acara", "Error",  JOptionPane.ERROR_MESSAGE);
            }
        } 
        else {
            JOptionPane.showMessageDialog(this, "Harap memilih sebuah tiket acara terlebih dahulu!", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jButtonPesanActionPerformed

    private void buttonBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonBackActionPerformed
        // TODO add your handling code here:
        WelcomePage form = new WelcomePage();
        form.setVisible(true);
        this.setVisible(false);
        form.usn = usn;
        form.isiData();
    }//GEN-LAST:event_buttonBackActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DaftarAcaraPending.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DaftarAcaraPending.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DaftarAcaraPending.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DaftarAcaraPending.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DaftarAcaraPending().setVisible(true);
            }
        });
    }

    public void isiData() {
        txtNama.setText(usn);
    }

    @Override
    public void run() {
        while (true) {  
        }
    }

    public void getMessage() throws IOException {
        String chatServer;

        in = new BufferedReader(new InputStreamReader(s.getInputStream()));
        chatServer = in.readLine();
        System.out.println(chatServer);

        String[] arrayDariServer = chatServer.split("-n");

        String status = arrayDariServer[0];

        if (status.equals("Daftar Acara Pending")) {
            String textLong = arrayDariServer[1];
            String[] arrayDariTextLong = textLong.split("#");

            DefaultTableModel model = (DefaultTableModel) tableAcara.getModel();
            model.setRowCount(0);
            Object[] rowData = new Object[6];

            int i = 0;
            for (i = 0; i < arrayDariTextLong.length; i++) {

                String textAkhir = arrayDariTextLong[i];
                System.out.println(i);
                System.out.println(arrayDariTextLong.length);
                String[] arrayFix = textAkhir.split("-m");
                String idReservasi = arrayFix[0];
                System.out.println(idReservasi);
                String idAcara = arrayFix[1];
                String namaAcara = arrayFix[2];
                String kategoriAcara = arrayFix[3];
                String lokasiAcara = arrayFix[4];
                String tanggalAcara = arrayFix[5];

                rowData[0] = idReservasi;
                rowData[1] = idAcara;
                rowData[2] = namaAcara;
                rowData[3] = kategoriAcara;
                rowData[4] = lokasiAcara;
                rowData[5] = tanggalAcara;
                model.addRow(rowData);
            }
            while (i < arrayDariTextLong.length) {
                i++;
            }

            //sembunyiin kolom id
            TableColumnModel tcm = tableAcara.getColumnModel();
            tableAcara.getColumnModel().getColumn(0).setWidth(0);
            tableAcara.getColumnModel().getColumn(0).setMinWidth(0);
            tableAcara.getColumnModel().getColumn(0).setMaxWidth(0);

            tableAcara.getColumnModel().getColumn(1).setWidth(0);
            tableAcara.getColumnModel().getColumn(1).setMinWidth(0);
            tableAcara.getColumnModel().getColumn(1).setMaxWidth(0);

            //jadiin isi tabel center smua
            DefaultTableCellRenderer centerRenderer = new DefaultTableCellRenderer();
            centerRenderer.setHorizontalAlignment(DefaultTableCellRenderer.CENTER);
            for (int j = 0; j < tableAcara.getColumnCount(); j++) {
                tableAcara.getColumnModel().getColumn(j).setCellRenderer(centerRenderer);
            }

            //tambahin sekat / grid antar kolom
            tableAcara.setShowGrid(true);
            tableAcara.setGridColor(Color.GRAY);
            tableAcara.setIntercellSpacing(new java.awt.Dimension(1, 1));

            //ganti font dan ukuran tulisan dalam table
            Font font = new Font("Nunito", Font.PLAIN, 15);
            tableAcara.setFont(font);
            tableAcara.setRowHeight(30); //ini tinggi per cell (sesuaiin sama font aja)

        } else if (status.equals("Gagal Daftar Acara Pending")) {
            System.out.println("Tidak ada daftar acara pending");
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonBack;
    private javax.swing.JButton jButtonPesan;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanelMain;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tableAcara;
    private javax.swing.JLabel txtNama;
    // End of variables declaration//GEN-END:variables
}
